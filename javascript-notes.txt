
////////////////////////////////////////////////
        JS/JQUERY BOOK: CH 1

review:

OBJECT ORIENTED: objects are MODELED with data
    and each time one appears it is called an 
    INSTANCE.

PROPERTIES: characteristcs of an object, each
    property has a variable and a value.

EVENT: When a user interacts with a program and 
    triggers a reaction

METHODS: functions that are defined in an object


*Web browsers are object oriented*
    -the browser represents each window and tab 
     using a WINDOW OBJECT 
        -The location property has the URL as 
         the value
    -The current web page loaded in the 
     browser is modeled using the 
     DOCUMENT OBJECT


*The Document Object represents an HTML page*
    -Using the Document Object you can access
     and change what the user sees on the page.
    -It has properties, events, and methods from
     the HTML code
    -The Document Object is just one of a set of
     objects all browsers support. 
    -When a browser creates the document object
     of a webpage, it also creates a new object
     for every element on the page
    -together, all thes objects create the 
     DOCUMENT OBJECT MODEL (ch. 5 for more)


*How a browser sees a page*
1. recieve page html code
    -these are the individual HTML documents
2. create the DOM (document object model) of 
   the page and store it in memory:

    DOCUMENT   top is the DOCUMENT OBJECT, each
       |       item below is both a node and an
    <HTML>     object.
       |-----------------------|
    <HEAD>                  <BODY>
       |--------|              |---------|
    <TITLE>  <LINK>           <h1>      <p>
       |        |              |         |
     name      css            text     text 

3. Use a rendering engine to display the page
    -if no css is linked to it, it will display
     presets












////////////////////////////////////////////////
////////////////////////////////////////////////
////////////////////////////////////////////////
////////////////////////////////////////////////
////////////////////////////////////////////////
            USEFUL FUNCTIONS 


------------------------------------------------
.indexOf() 

  Find the first index of a value in an array.
  It will return the number of the index of a
  given value, or a -1 if the value is not in
  the array.

SYNTAX
array.indexOf(item, start) 

    item 
        -REQ. This is the value you are 
         searching for. 
  start
    -OPT. Tells the program on what index to 
     start looking. The index is inclusive.
     Negative values will search from that
     position from the end (-2 is 2nd from
     the last index)

USES 
    .indexOf() is used for what you think, but
    by including a start argument, you can find
    a duplicate values next index:
    
    arr.indexOf(value, 1st-values-index)
    //this tells it to find the next instance
    //of that value 

   
------------------------------------------------
.lastIndexOf()

  Find the last index of a value in an array.

SYNTAX
array.indexOf(item, start) 

    The only difference is that the search 
    goes right to left, instead of left to
    right. 
    The start argument will start there and 
    go to the beginning 

USES 
    
    For what you'd think, operates the same
    as indexOf, just in a mirrored direction.


------------------------------------------------
Number()

    Convert a non-number object to a numberical
    value. If no number can be returned, it will
    produce Nan. If no object is provided, it 
    will return 0.

SYNTAX
Number(object)

USES 
    Look at the values that will be returned when
    they are plugged into Number():

    var x1 = true;
    var x2 = false;
    var x3 = new Date();
    var x4 = "999";
    var x5 = "999 888";

    Number(x1) // 1 
    Number(x2) // 0 
    Number(x3) // mS since jan 1st 1970
    Number(x4) // 999
    Number(x5) // NaN



------------------------------------------------
.toString()

    Convert a number to a string. It can also
    convert a number into a string of binary,
    octal, or hexidecimal value 

SYNTAX
number.toString(radix)

    radix - OPTIONAL. Which base to use for 
    representing a numeric value. Must be an 
    integer between 2 and 36.

    2 - The number will show as a binary value
    8 - The number will show as an octal value
    16 - The number will show as an hexadecimal 
         value



------------------------------------------------
.split()

    Split a string object into an array of 
    substrings using a specified separator

SYNTAX

str.split(separator, limit)








------------------------------------------------
.reverse()

    Reverse the order of the elements in an 
    array 


SYNTAX 
arr.reverse()
    
    It takes no arguments. It just reverses an
    array 

    ["one", "two", "three"]  is the start
    ["three", "two", "one"]  is what you'd get



------------------------------------------------







------------------------------------------------
------------------------------------------------
------------------------------------------------
------------------------------------------------
------------------------------------------------
------------------------------------------------
